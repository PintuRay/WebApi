=> Run these commands to clean up any existing resources
  right click on docker-container project select open in terminal (this open devloper powershell) run the bellow cmd
   docker-compose down -v
   docker-compose build --no-cache
   docker-compose up

 After updating, run:
   docker-compose down -v
   docker-compose up --build
   ----------------------------------------------------------------------------
   version: '3.8'

services:
  fms.server:
    image: ${DOCKER_REGISTRY-}fmsserver
    container_name: fms.api
    build:
      context: .
      dockerfile: FMS.Server/Dockerfile
    ports:
      - "8080:8080" 
      - "8081:8081"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080;https://+:8081
      - ConnectionStrings__DBCS=Host=postgres.db;Port=5432;Database=postgres;Username=postgres;Password=Devloper@1234
      - ConnectionStrings__Redis=fms.cache:6379,abortConnect=false
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
      - ./FMS.Server:/app
    depends_on:
      postgres.db:
        condition: service_healthy
      fms.cache:
        condition: service_started
    networks:
      - fms-network

  postgres.db:
    image: postgres:latest
    container_name: fms.db
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Devloper@1234
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - fms-network

  fms.cache:
    image: redis:latest
    container_name: fms.cache
    restart: always
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - fms-network

volumes:
  postgres_data:
    name: fms_postgres_data

networks:
  fms-network:
    name: fms-network
    driver: bridge



    in appsettings.json
      "ConnectionStrings": {
    "DBCS": "Host=postgres.db;Port=5432;Database=postgres;Username=postgres;Password=Devloper@1234",
    "Redis": "fms.cache:6379,abortConnect=false"
  },